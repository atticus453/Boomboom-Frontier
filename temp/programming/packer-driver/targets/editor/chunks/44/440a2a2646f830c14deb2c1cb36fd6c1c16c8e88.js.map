{"version":3,"sources":["file:///Users/joan/Desktop/%E6%B8%85%E5%A4%A7/%E8%BB%9F%E9%AB%94%E5%AF%A6%E9%A9%97%E8%A8%AD%E8%A8%88/Boomboom-Frontier/node_modules/idb/build/index.cjs"],"names":["_cjsLoader","_req","__cjsMetaURL","url","define","exports","require","module","__filename","__dirname","Object","defineProperty","value","wrapIdbValue","openDB","name","version","blocked","upgrade","blocking","terminated","request","indexedDB","open","openPromise","wrap","addEventListener","event","result","oldVersion","newVersion","transaction","then","db","catch","deleteDB","deleteDatabase","undefined","readMethods","writeMethods","cachedMethods","Map","getMethod","target","prop","IDBDatabase","get","targetFuncName","replace","useIndex","isWrite","includes","IDBIndex","IDBObjectStore","prototype","method","storeName","args","tx","store","index","shift","Promise","all","done","set","replaceTraps","oldTraps","receiver","has","unwrap","_cjsExports","___esModule","__esModule","_unwrap","_wrap","_deleteDB","_openDB"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from './wrap-idb-value.cjs';\nlet _cjsExports;\nlet ___esModule;\nlet _unwrap;\nlet _wrap;\nlet _deleteDB;\nlet _openDB;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n 'use strict';\n\n Object.defineProperty(exports, '__esModule', { value: true });\n\n var wrapIdbValue = require('./wrap-idb-value.cjs');\n\n /**\n  * Open a database.\n  *\n  * @param name Name of the database.\n  * @param version Schema version.\n  * @param callbacks Additional callbacks.\n  */\n function openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n     const request = indexedDB.open(name, version);\n     const openPromise = wrapIdbValue.wrap(request);\n     if (upgrade) {\n         request.addEventListener('upgradeneeded', (event) => {\n             upgrade(wrapIdbValue.wrap(request.result), event.oldVersion, event.newVersion, wrapIdbValue.wrap(request.transaction), event);\n         });\n     }\n     if (blocked) {\n         request.addEventListener('blocked', (event) => blocked(\n         // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n         event.oldVersion, event.newVersion, event));\n     }\n     openPromise\n         .then((db) => {\n         if (terminated)\n             db.addEventListener('close', () => terminated());\n         if (blocking) {\n             db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n         }\n     })\n         .catch(() => { });\n     return openPromise;\n }\n /**\n  * Delete a database.\n  *\n  * @param name Name of the database.\n  */\n function deleteDB(name, { blocked } = {}) {\n     const request = indexedDB.deleteDatabase(name);\n     if (blocked) {\n         request.addEventListener('blocked', (event) => blocked(\n         // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n         event.oldVersion, event));\n     }\n     return wrapIdbValue.wrap(request).then(() => undefined);\n }\n\n const readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\n const writeMethods = ['put', 'add', 'delete', 'clear'];\n const cachedMethods = new Map();\n function getMethod(target, prop) {\n     if (!(target instanceof IDBDatabase &&\n         !(prop in target) &&\n         typeof prop === 'string')) {\n         return;\n     }\n     if (cachedMethods.get(prop))\n         return cachedMethods.get(prop);\n     const targetFuncName = prop.replace(/FromIndex$/, '');\n     const useIndex = prop !== targetFuncName;\n     const isWrite = writeMethods.includes(targetFuncName);\n     if (\n     // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n     !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n         !(isWrite || readMethods.includes(targetFuncName))) {\n         return;\n     }\n     const method = async function (storeName, ...args) {\n         // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n         const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n         let target = tx.store;\n         if (useIndex)\n             target = target.index(args.shift());\n         // Must reject if op rejects.\n         // If it's a write operation, must reject if tx.done rejects.\n         // Must reject with op rejection first.\n         // Must resolve with op value.\n         // Must handle both promises (no unhandled rejections)\n         return (await Promise.all([\n             target[targetFuncName](...args),\n             isWrite && tx.done,\n         ]))[0];\n     };\n     cachedMethods.set(prop, method);\n     return method;\n }\n wrapIdbValue.replaceTraps((oldTraps) => ({\n     ...oldTraps,\n     get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n     has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n }));\n\n exports.unwrap = wrapIdbValue.unwrap;\n exports.wrap = wrapIdbValue.wrap;\n exports.deleteDB = deleteDB;\n exports.openDB = openDB;\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_unwrap = module.exports.unwrap;\n_wrap = module.exports.wrap;\n_deleteDB = module.exports.deleteDB;\n_openDB = module.exports.openDB;\n\n}, () => ({\n  './wrap-idb-value.cjs': _req,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}