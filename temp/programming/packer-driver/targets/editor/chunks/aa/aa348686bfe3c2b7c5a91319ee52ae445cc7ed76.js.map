{"version":3,"sources":["file:///Users/joan/Desktop/%E6%B8%85%E5%A4%A7/%E8%BB%9F%E9%AB%94%E5%AF%A6%E9%A9%97%E8%A8%AD%E8%A8%88/Boomboom-Frontier/node_modules/@firebase/component/dist/index.cjs.js"],"names":["_cjsLoader","_req","__cjsMetaURL","_req0","url","define","exports","require","module","__filename","__dirname","Object","defineProperty","value","tslib","util","Component","name","instanceFactory","type","multipleInstances","serviceProps","instantiationMode","onInstanceCreated","prototype","setInstantiationMode","mode","setMultipleInstances","setServiceProps","props","setInstanceCreatedCallback","callback","DEFAULT_ENTRY_NAME","Provider","container","component","instances","Map","instancesDeferred","instancesOptions","onInitCallbacks","get","identifier","normalizedIdentifier","normalizeInstanceIdentifier","has","deferred","Deferred","set","isInitialized","shouldAutoInitialize","instance","getOrInitializeService","instanceIdentifier","resolve","e","promise","getImmediate","options","_a","optional","Error","concat","getComponent","setComponent","e_1","isComponentEager","_b","__values","entries","_c","next","done","_d","__read","instanceDeferred","e_1_1","error","return","call","clearInstance","delete","__awaiter","services","__generator","label","Array","from","values","Promise","all","__spreadArray","filter","service","map","INTERNAL","_delete","sent","isComponentSet","getOptions","initialize","opts","e_2","_e","normalizedDeferredIdentifier","e_2_1","onInit","existingCallbacks","Set","add","existingInstance","invokeOnInitCallbacks","e_3","callbacks","callbacks_1","callbacks_1_1","e_3_1","normalizeIdentifierForFactory","undefined","ComponentContainer","providers","addComponent","provider","getProvider","addOrOverwriteComponent","getProviders","_cjsExports","___esModule","__esModule","_Component","_ComponentContainer","_Provider"],"mappings":"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","sourcesContent":["import _cjsLoader from 'cce:/internal/ml/cjs-loader.mjs';\nimport { __cjsMetaURL as _req} from 'tslib';\nimport { __cjsMetaURL as _req0} from '@firebase/util';\nlet _cjsExports;\nlet ___esModule;\nlet _Component;\nlet _ComponentContainer;\nlet _Provider;\nconst __cjsMetaURL = import.meta.url;\n_cjsLoader.define(__cjsMetaURL, function (exports, require, module, __filename, __dirname) {\n// #region ORIGINAL CODE\n\n\n 'use strict';\n\n Object.defineProperty(exports, '__esModule', { value: true });\n\n var tslib = require('tslib');\n var util = require('@firebase/util');\n\n /**\r\n  * Component for service name T, e.g. `auth`, `auth-internal`\r\n  */\r\n var Component = /** @class */ (function () {\r\n     /**\r\n      *\r\n      * @param name The public service name, e.g. app, auth, firestore, database\r\n      * @param instanceFactory Service factory responsible for creating the public interface\r\n      * @param type whether the service provided by the component is public or private\r\n      */\r\n     function Component(name, instanceFactory, type) {\r\n         this.name = name;\r\n         this.instanceFactory = instanceFactory;\r\n         this.type = type;\r\n         this.multipleInstances = false;\r\n         /**\r\n          * Properties to be added to the service namespace\r\n          */\r\n         this.serviceProps = {};\r\n         this.instantiationMode = \"LAZY\" /* InstantiationMode.LAZY */;\r\n         this.onInstanceCreated = null;\r\n     }\r\n     Component.prototype.setInstantiationMode = function (mode) {\r\n         this.instantiationMode = mode;\r\n         return this;\r\n     };\r\n     Component.prototype.setMultipleInstances = function (multipleInstances) {\r\n         this.multipleInstances = multipleInstances;\r\n         return this;\r\n     };\r\n     Component.prototype.setServiceProps = function (props) {\r\n         this.serviceProps = props;\r\n         return this;\r\n     };\r\n     Component.prototype.setInstanceCreatedCallback = function (callback) {\r\n         this.onInstanceCreated = callback;\r\n         return this;\r\n     };\r\n     return Component;\r\n }());\n\n /**\r\n  * @license\r\n  * Copyright 2019 Google LLC\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n var DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\n /**\r\n  * @license\r\n  * Copyright 2019 Google LLC\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n /**\r\n  * Provider for instance for service name T, e.g. 'auth', 'auth-internal'\r\n  * NameServiceMapping[T] is an alias for the type of the instance\r\n  */\r\n var Provider = /** @class */ (function () {\r\n     function Provider(name, container) {\r\n         this.name = name;\r\n         this.container = container;\r\n         this.component = null;\r\n         this.instances = new Map();\r\n         this.instancesDeferred = new Map();\r\n         this.instancesOptions = new Map();\r\n         this.onInitCallbacks = new Map();\r\n     }\r\n     /**\r\n      * @param identifier A provider can provide mulitple instances of a service\r\n      * if this.component.multipleInstances is true.\r\n      */\r\n     Provider.prototype.get = function (identifier) {\r\n         // if multipleInstances is not supported, use the default name\r\n         var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n         if (!this.instancesDeferred.has(normalizedIdentifier)) {\r\n             var deferred = new util.Deferred();\r\n             this.instancesDeferred.set(normalizedIdentifier, deferred);\r\n             if (this.isInitialized(normalizedIdentifier) ||\r\n                 this.shouldAutoInitialize()) {\r\n                 // initialize the service if it can be auto-initialized\r\n                 try {\r\n                     var instance = this.getOrInitializeService({\r\n                         instanceIdentifier: normalizedIdentifier\r\n                     });\r\n                     if (instance) {\r\n                         deferred.resolve(instance);\r\n                     }\r\n                 }\r\n                 catch (e) {\r\n                     // when the instance factory throws an exception during get(), it should not cause\r\n                     // a fatal error. We just return the unresolved promise in this case.\r\n                 }\r\n             }\r\n         }\r\n         return this.instancesDeferred.get(normalizedIdentifier).promise;\r\n     };\r\n     Provider.prototype.getImmediate = function (options) {\r\n         var _a;\r\n         // if multipleInstances is not supported, use the default name\r\n         var normalizedIdentifier = this.normalizeInstanceIdentifier(options === null || options === void 0 ? void 0 : options.identifier);\r\n         var optional = (_a = options === null || options === void 0 ? void 0 : options.optional) !== null && _a !== void 0 ? _a : false;\r\n         if (this.isInitialized(normalizedIdentifier) ||\r\n             this.shouldAutoInitialize()) {\r\n             try {\r\n                 return this.getOrInitializeService({\r\n                     instanceIdentifier: normalizedIdentifier\r\n                 });\r\n             }\r\n             catch (e) {\r\n                 if (optional) {\r\n                     return null;\r\n                 }\r\n                 else {\r\n                     throw e;\r\n                 }\r\n             }\r\n         }\r\n         else {\r\n             // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw\r\n             if (optional) {\r\n                 return null;\r\n             }\r\n             else {\r\n                 throw Error(\"Service \".concat(this.name, \" is not available\"));\r\n             }\r\n         }\r\n     };\r\n     Provider.prototype.getComponent = function () {\r\n         return this.component;\r\n     };\r\n     Provider.prototype.setComponent = function (component) {\r\n         var e_1, _a;\r\n         if (component.name !== this.name) {\r\n             throw Error(\"Mismatching Component \".concat(component.name, \" for Provider \").concat(this.name, \".\"));\r\n         }\r\n         if (this.component) {\r\n             throw Error(\"Component for \".concat(this.name, \" has already been provided\"));\r\n         }\r\n         this.component = component;\r\n         // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)\r\n         if (!this.shouldAutoInitialize()) {\r\n             return;\r\n         }\r\n         // if the service is eager, initialize the default instance\r\n         if (isComponentEager(component)) {\r\n             try {\r\n                 this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });\r\n             }\r\n             catch (e) {\r\n                 // when the instance factory for an eager Component throws an exception during the eager\r\n                 // initialization, it should not cause a fatal error.\r\n                 // TODO: Investigate if we need to make it configurable, because some component may want to cause\r\n                 // a fatal error in this case?\r\n             }\r\n         }\r\n         try {\r\n             // Create service instances for the pending promises and resolve them\r\n             // NOTE: if this.multipleInstances is false, only the default instance will be created\r\n             // and all promises with resolve with it regardless of the identifier.\r\n             for (var _b = tslib.__values(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                 var _d = tslib.__read(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];\r\n                 var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                 try {\r\n                     // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.\r\n                     var instance = this.getOrInitializeService({\r\n                         instanceIdentifier: normalizedIdentifier\r\n                     });\r\n                     instanceDeferred.resolve(instance);\r\n                 }\r\n                 catch (e) {\r\n                     // when the instance factory throws an exception, it should not cause\r\n                     // a fatal error. We just leave the promise unresolved.\r\n                 }\r\n             }\r\n         }\r\n         catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n         finally {\r\n             try {\r\n                 if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n             }\r\n             finally { if (e_1) throw e_1.error; }\r\n         }\r\n     };\r\n     Provider.prototype.clearInstance = function (identifier) {\r\n         if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n         this.instancesDeferred.delete(identifier);\r\n         this.instancesOptions.delete(identifier);\r\n         this.instances.delete(identifier);\r\n     };\r\n     // app.delete() will call this method on every provider to delete the services\r\n     // TODO: should we mark the provider as deleted?\r\n     Provider.prototype.delete = function () {\r\n         return tslib.__awaiter(this, void 0, void 0, function () {\r\n             var services;\r\n             return tslib.__generator(this, function (_a) {\r\n                 switch (_a.label) {\r\n                     case 0:\r\n                         services = Array.from(this.instances.values());\r\n                         return [4 /*yield*/, Promise.all(tslib.__spreadArray(tslib.__spreadArray([], tslib.__read(services\r\n                                 .filter(function (service) { return 'INTERNAL' in service; }) // legacy services\r\n                                 // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                 .map(function (service) { return service.INTERNAL.delete(); })), false), tslib.__read(services\r\n                                 .filter(function (service) { return '_delete' in service; }) // modularized services\r\n                                 // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                                 .map(function (service) { return service._delete(); })), false))];\r\n                     case 1:\r\n                         _a.sent();\r\n                         return [2 /*return*/];\r\n                 }\r\n             });\r\n         });\r\n     };\r\n     Provider.prototype.isComponentSet = function () {\r\n         return this.component != null;\r\n     };\r\n     Provider.prototype.isInitialized = function (identifier) {\r\n         if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n         return this.instances.has(identifier);\r\n     };\r\n     Provider.prototype.getOptions = function (identifier) {\r\n         if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n         return this.instancesOptions.get(identifier) || {};\r\n     };\r\n     Provider.prototype.initialize = function (opts) {\r\n         var e_2, _a;\r\n         if (opts === void 0) { opts = {}; }\r\n         var _b = opts.options, options = _b === void 0 ? {} : _b;\r\n         var normalizedIdentifier = this.normalizeInstanceIdentifier(opts.instanceIdentifier);\r\n         if (this.isInitialized(normalizedIdentifier)) {\r\n             throw Error(\"\".concat(this.name, \"(\").concat(normalizedIdentifier, \") has already been initialized\"));\r\n         }\r\n         if (!this.isComponentSet()) {\r\n             throw Error(\"Component \".concat(this.name, \" has not been registered yet\"));\r\n         }\r\n         var instance = this.getOrInitializeService({\r\n             instanceIdentifier: normalizedIdentifier,\r\n             options: options\r\n         });\r\n         try {\r\n             // resolve any pending promise waiting for the service instance\r\n             for (var _c = tslib.__values(this.instancesDeferred.entries()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                 var _e = tslib.__read(_d.value, 2), instanceIdentifier = _e[0], instanceDeferred = _e[1];\r\n                 var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);\r\n                 if (normalizedIdentifier === normalizedDeferredIdentifier) {\r\n                     instanceDeferred.resolve(instance);\r\n                 }\r\n             }\r\n         }\r\n         catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n         finally {\r\n             try {\r\n                 if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n             }\r\n             finally { if (e_2) throw e_2.error; }\r\n         }\r\n         return instance;\r\n     };\r\n     /**\r\n      *\r\n      * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().\r\n      * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.\r\n      *\r\n      * @param identifier An optional instance identifier\r\n      * @returns a function to unregister the callback\r\n      */\r\n     Provider.prototype.onInit = function (callback, identifier) {\r\n         var _a;\r\n         var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);\r\n         var existingCallbacks = (_a = this.onInitCallbacks.get(normalizedIdentifier)) !== null && _a !== void 0 ? _a : new Set();\r\n         existingCallbacks.add(callback);\r\n         this.onInitCallbacks.set(normalizedIdentifier, existingCallbacks);\r\n         var existingInstance = this.instances.get(normalizedIdentifier);\r\n         if (existingInstance) {\r\n             callback(existingInstance, normalizedIdentifier);\r\n         }\r\n         return function () {\r\n             existingCallbacks.delete(callback);\r\n         };\r\n     };\r\n     /**\r\n      * Invoke onInit callbacks synchronously\r\n      * @param instance the service instance`\r\n      */\r\n     Provider.prototype.invokeOnInitCallbacks = function (instance, identifier) {\r\n         var e_3, _a;\r\n         var callbacks = this.onInitCallbacks.get(identifier);\r\n         if (!callbacks) {\r\n             return;\r\n         }\r\n         try {\r\n             for (var callbacks_1 = tslib.__values(callbacks), callbacks_1_1 = callbacks_1.next(); !callbacks_1_1.done; callbacks_1_1 = callbacks_1.next()) {\r\n                 var callback = callbacks_1_1.value;\r\n                 try {\r\n                     callback(instance, identifier);\r\n                 }\r\n                 catch (_b) {\r\n                     // ignore errors in the onInit callback\r\n                 }\r\n             }\r\n         }\r\n         catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n         finally {\r\n             try {\r\n                 if (callbacks_1_1 && !callbacks_1_1.done && (_a = callbacks_1.return)) _a.call(callbacks_1);\r\n             }\r\n             finally { if (e_3) throw e_3.error; }\r\n         }\r\n     };\r\n     Provider.prototype.getOrInitializeService = function (_a) {\r\n         var instanceIdentifier = _a.instanceIdentifier, _b = _a.options, options = _b === void 0 ? {} : _b;\r\n         var instance = this.instances.get(instanceIdentifier);\r\n         if (!instance && this.component) {\r\n             instance = this.component.instanceFactory(this.container, {\r\n                 instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),\r\n                 options: options\r\n             });\r\n             this.instances.set(instanceIdentifier, instance);\r\n             this.instancesOptions.set(instanceIdentifier, options);\r\n             /**\r\n              * Invoke onInit listeners.\r\n              * Note this.component.onInstanceCreated is different, which is used by the component creator,\r\n              * while onInit listeners are registered by consumers of the provider.\r\n              */\r\n             this.invokeOnInitCallbacks(instance, instanceIdentifier);\r\n             /**\r\n              * Order is important\r\n              * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which\r\n              * makes `isInitialized()` return true.\r\n              */\r\n             if (this.component.onInstanceCreated) {\r\n                 try {\r\n                     this.component.onInstanceCreated(this.container, instanceIdentifier, instance);\r\n                 }\r\n                 catch (_c) {\r\n                     // ignore errors in the onInstanceCreatedCallback\r\n                 }\r\n             }\r\n         }\r\n         return instance || null;\r\n     };\r\n     Provider.prototype.normalizeInstanceIdentifier = function (identifier) {\r\n         if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }\r\n         if (this.component) {\r\n             return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;\r\n         }\r\n         else {\r\n             return identifier; // assume multiple instances are supported before the component is provided.\r\n         }\r\n     };\r\n     Provider.prototype.shouldAutoInitialize = function () {\r\n         return (!!this.component &&\r\n             this.component.instantiationMode !== \"EXPLICIT\" /* InstantiationMode.EXPLICIT */);\r\n     };\r\n     return Provider;\r\n }());\r\n // undefined should be passed to the service factory for the default instance\r\n function normalizeIdentifierForFactory(identifier) {\r\n     return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;\r\n }\r\n function isComponentEager(component) {\r\n     return component.instantiationMode === \"EAGER\" /* InstantiationMode.EAGER */;\r\n }\n\n /**\r\n  * @license\r\n  * Copyright 2019 Google LLC\r\n  *\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n  *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n  *\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n /**\r\n  * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`\r\n  */\r\n var ComponentContainer = /** @class */ (function () {\r\n     function ComponentContainer(name) {\r\n         this.name = name;\r\n         this.providers = new Map();\r\n     }\r\n     /**\r\n      *\r\n      * @param component Component being added\r\n      * @param overwrite When a component with the same name has already been registered,\r\n      * if overwrite is true: overwrite the existing component with the new component and create a new\r\n      * provider with the new component. It can be useful in tests where you want to use different mocks\r\n      * for different tests.\r\n      * if overwrite is false: throw an exception\r\n      */\r\n     ComponentContainer.prototype.addComponent = function (component) {\r\n         var provider = this.getProvider(component.name);\r\n         if (provider.isComponentSet()) {\r\n             throw new Error(\"Component \".concat(component.name, \" has already been registered with \").concat(this.name));\r\n         }\r\n         provider.setComponent(component);\r\n     };\r\n     ComponentContainer.prototype.addOrOverwriteComponent = function (component) {\r\n         var provider = this.getProvider(component.name);\r\n         if (provider.isComponentSet()) {\r\n             // delete the existing provider from the container, so we can register the new component\r\n             this.providers.delete(component.name);\r\n         }\r\n         this.addComponent(component);\r\n     };\r\n     /**\r\n      * getProvider provides a type safe interface where it can only be called with a field name\r\n      * present in NameServiceMapping interface.\r\n      *\r\n      * Firebase SDKs providing services should extend NameServiceMapping interface to register\r\n      * themselves.\r\n      */\r\n     ComponentContainer.prototype.getProvider = function (name) {\r\n         if (this.providers.has(name)) {\r\n             return this.providers.get(name);\r\n         }\r\n         // create a Provider for a service that hasn't registered with Firebase\r\n         var provider = new Provider(name, this);\r\n         this.providers.set(name, provider);\r\n         return provider;\r\n     };\r\n     ComponentContainer.prototype.getProviders = function () {\r\n         return Array.from(this.providers.values());\r\n     };\r\n     return ComponentContainer;\r\n }());\n\n exports.Component = Component;\n exports.ComponentContainer = ComponentContainer;\n exports.Provider = Provider;\n //# sourceMappingURL=index.cjs.js.map\n\n\n// #endregion ORIGINAL CODE\n\n_cjsExports = module.exports;\n___esModule = module.exports.__esModule;\n_Component = module.exports.Component;\n_ComponentContainer = module.exports.ComponentContainer;\n_Provider = module.exports.Provider;\n\n}, () => ({\n  'tslib': _req,\n  '@firebase/util': _req0,\n}));\nexport { _cjsExports as default };\nexport { __cjsMetaURL }\n"]}