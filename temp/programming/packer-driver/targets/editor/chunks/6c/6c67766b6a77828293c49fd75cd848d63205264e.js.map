{"version":3,"sources":["file:///Users/joan/Desktop/%E6%B8%85%E5%A4%A7/%E8%BB%9F%E9%AB%94%E5%AF%A6%E9%A9%97%E8%A8%AD%E8%A8%88/Boomboom-Frontier/node_modules/idb/build/index.js"],"names":["openDB","name","version","blocked","upgrade","blocking","terminated","request","indexedDB","open","openPromise","wrap","addEventListener","event","result","oldVersion","newVersion","transaction","then","db","catch","deleteDB","deleteDatabase","undefined","getMethod","target","prop","IDBDatabase","cachedMethods","get","targetFuncName","replace","useIndex","isWrite","writeMethods","includes","IDBIndex","IDBObjectStore","prototype","readMethods","method","storeName","args","tx","store","index","shift","Promise","all","done","set","w","replaceTraps","r","u","Map","oldTraps","receiver","has"],"mappings":"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","sourcesContent":["import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n"]}