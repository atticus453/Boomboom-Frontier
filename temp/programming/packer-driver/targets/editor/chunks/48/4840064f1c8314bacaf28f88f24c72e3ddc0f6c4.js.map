{"version":3,"sources":["file:///Users/joan/Desktop/%E6%B8%85%E5%A4%A7/%E8%BB%9F%E9%AB%94%E5%AF%A6%E9%A9%97%E8%A8%AD%E8%A8%88/Boomboom-Frontier/assets/Scripts/MultiSelect.ts"],"names":["_decorator","Component","Node","Button","find","director","EditBox","Prefab","instantiate","Label","MultiRoom","ccclass","property","MultiSelect","type","roomPosY","roomID","start","creatRoomButton","getComponent","node","on","EventType","MOUSE_UP","addRoom","roomRef","firebase","database","ref","once","snapshot","exists","roomList","val","room","roomNode","roomPrefab","getChildByName","string","roomName","setPosition","addChild","key","loadScene","console","log","error","roomsRef","newRoomRef","push","user","auth","currentUser","set","users","uid","isReady","userCnt","alert","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Button, find, director, log, EditBox, Prefab, instantiate, resources, Label } from 'cc';\nimport { MultiRoom } from './MultiRoom';\nconst { ccclass, property } = _decorator;\n\n@ccclass('MultiSelect')\nexport class MultiSelect extends Component {\n\n    roomPosY: number = 100;\n    // roomHeight: number = 100;\n\n    roomID: number = 0;\n\n    @property({ type: EditBox })\n    roomName: EditBox = null;\n\n    @property({ type: Prefab })\n    roomPrefab: Prefab = null;\n\n    start() {\n        let creatRoomButton = find(\"Canvas/creatRoom\").getComponent(Button);\n\n        creatRoomButton.node.on(Node.EventType.MOUSE_UP, this.addRoom, this);\n        const roomRef = firebase.database().ref('rooms/')\n        roomRef.once('value', (snapshot) => {\n            if (snapshot.exists()) {\n                const roomList = snapshot.val();\n                for (let room in roomList) {\n                    const roomNode = instantiate(this.roomPrefab);\n                    // console.log(roomList[room]);\n                    roomNode.getChildByName(\"Label\").getComponent(Label).string = roomList[room].roomName;\n                    roomNode.setPosition(0, this.roomPosY, 0);\n                    this.roomPosY -= 150;\n                    find(\"Canvas/Rooms\").addChild(roomNode);\n                    roomNode.on(Node.EventType.MOUSE_UP, () => {\n                        MultiRoom.roomID = roomList[room].key;\n                        director.loadScene(\"MultiRoom\");\n                    });\n                }\n            } else {\n                console.log(\"No rooms found.\");\n            }\n        }, (error) => {\n            console.error(\"Failed to fetch room list: \", error);\n        });\n    }\n\n    async addRoom() {\n        try {\n            if (this.roomName.string) {\n                const roomsRef = firebase.database().ref('rooms');\n                const newRoomRef = roomsRef.push();\n                this.roomID = newRoomRef.key;\n                const user = await firebase.auth().currentUser;\n                await newRoomRef.set({\n                    roomName: this.roomName.string,\n                    users: [user.uid],\n                    isReady: false,\n                    userCnt: 1,\n                    key: this.roomID\n                });\n                const roomNode = instantiate(this.roomPrefab);\n                console.log(roomNode);\n                roomNode.getChildByName(\"Label\").getComponent(Label).string = this.roomName.string;\n                roomNode.setPosition(0, this.roomPosY, 0);\n                this.roomPosY -= 150;\n\n                find(\"Canvas/Rooms\").addChild(roomNode);\n                this.roomName.string = \"\";\n                alert(\"Room created successfully\");\n            }\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}