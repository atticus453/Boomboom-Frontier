{"version":3,"sources":["file:///Users/joan/Desktop/%E6%B8%85%E5%A4%A7/%E8%BB%9F%E9%AB%94%E5%AF%A6%E9%A9%97%E8%A8%AD%E8%A8%88/Boomboom-Frontier/node_modules/@firebase/app/dist/esm/index.esm2017.js"],"names":["PlatformLoggerServiceImpl","FirebaseAppImpl","FirebaseServerAppImpl","HeartbeatServiceImpl","HeartbeatStorageImpl","isVersionServiceProvider","provider","component","getComponent","type","_addComponent","app","container","addComponent","e","logger","debug","name","_addOrOverwriteComponent","addOrOverwriteComponent","_registerComponent","componentName","_components","has","set","_apps","values","serverApp","_serverApps","_getProvider","heartbeatController","getProvider","getImmediate","optional","triggerHeartbeat","_removeServiceInstance","instanceIdentifier","DEFAULT_ENTRY_NAME","clearInstance","_isFirebaseApp","obj","options","undefined","_isFirebaseServerApp","settings","_clearComponents","clear","initializeApp","_options","rawConfig","config","Object","assign","automaticDataCollectionEnabled","ERROR_FACTORY","create","appName","String","getDefaultAppConfig","existingApp","get","deepEqual","ComponentContainer","newApp","initializeServerApp","_serverAppConfig","isBrowser","appOptions","nameObj","releaseOnDeref","hashCode","s","reduce","hash","c","Math","imul","charCodeAt","FinalizationRegistry","nameString","JSON","stringify","incRefCount","getApp","getApps","Array","from","deleteApp","cleanupProviders","delete","firebaseServerApp","decRefCount","Promise","all","getProviders","map","isDeleted","registerVersion","libraryKeyOrName","version","variant","_a","library","PLATFORM_LOG_STRING","libraryMismatch","match","versionMismatch","warning","push","warn","join","Component","onLog","logCallback","setUserLogHandler","setLogLevel","logLevel","setLogLevel$1","getDbPromise","dbPromise","openDB","DB_NAME","DB_VERSION","upgrade","db","oldVersion","createObjectStore","STORE_NAME","console","catch","originalErrorMessage","message","readHeartbeatsFromIndexedDB","tx","transaction","result","objectStore","computeKey","done","FirebaseError","idbGetError","writeHeartbeatsToIndexedDB","heartbeatObject","put","appId","getUTCDateString","today","Date","toISOString","substring","extractHeartbeatsForHeader","heartbeatsCache","maxSize","MAX_HEADER_BYTES","heartbeatsToSend","unsentEntries","slice","heartbeatEntry","find","hb","agent","singleDateHeartbeat","dates","date","countBytes","pop","base64urlEncodeWithoutPadding","heartbeats","length","registerCoreComponents","name$p","version$1","Logger","ErrorFactory","isIndexedDBAvailable","validateIndexedDBOpenable","constructor","getPlatformInfoString","providers","service","filter","logString","name$o","name$n","name$m","name$l","name$k","name$j","name$i","name$h","name$g","name$f","name$e","name$d","name$c","name$b","name$a","name$9","name$8","name$7","name$6","name$5","name$4","name$3","name$2","name$1","Map","ERRORS","_isDeleted","_config","_name","_automaticDataCollectionEnabled","_container","checkDestroyed","val","serverConfig","apiKey","appImpl","_serverConfig","_finalizationRegistry","automaticCleanup","_refCount","toJSON","refCount","register","SDK_VERSION","STORED_HEARTBEAT_RETENTION_MAX_MILLIS","_heartbeatsCache","_storage","_heartbeatsCachePromise","read","then","_b","platformLogger","lastSentHeartbeatDate","some","hbTimestamp","valueOf","now","overwrite","getHeartbeatsHeader","headerString","_canUseIndexedDBPromise","runIndexedDBEnvironmentCheck","canUseIndexedDB","idbHeartbeatObject","heartbeatsObject","existingHeartbeatsObject","add"],"mappings":"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","sourcesContent":["import { Component, ComponentContainer } from '@firebase/component';\nimport { Logger, setUserLogHandler, setLogLevel as setLogLevel$1 } from '@firebase/logger';\nimport { ErrorFactory, getDefaultAppConfig, deepEqual, isBrowser, FirebaseError, base64urlEncodeWithoutPadding, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nexport { FirebaseError } from '@firebase/util';\nimport { openDB } from 'idb';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PlatformLoggerServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n    }\r\n    // In initial implementation, this will be called by installations on\r\n    // auth token refresh, and installations will send this string.\r\n    getPlatformInfoString() {\r\n        const providers = this.container.getProviders();\r\n        // Loop through providers and get library/version pairs from any that are\r\n        // version components.\r\n        return providers\r\n            .map(provider => {\r\n            if (isVersionServiceProvider(provider)) {\r\n                const service = provider.getImmediate();\r\n                return `${service.library}/${service.version}`;\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        })\r\n            .filter(logString => logString)\r\n            .join(' ');\r\n    }\r\n}\r\n/**\r\n *\r\n * @param provider check if this provider provides a VersionService\r\n *\r\n * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider\r\n * provides VersionService. The provider is not necessarily a 'app-version'\r\n * provider.\r\n */\r\nfunction isVersionServiceProvider(provider) {\r\n    const component = provider.getComponent();\r\n    return (component === null || component === void 0 ? void 0 : component.type) === \"VERSION\" /* ComponentType.VERSION */;\r\n}\n\nconst name$p = \"@firebase/app\";\nconst version$1 = \"0.10.3\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app');\n\nconst name$o = \"@firebase/app-compat\";\n\nconst name$n = \"@firebase/analytics-compat\";\n\nconst name$m = \"@firebase/analytics\";\n\nconst name$l = \"@firebase/app-check-compat\";\n\nconst name$k = \"@firebase/app-check\";\n\nconst name$j = \"@firebase/auth\";\n\nconst name$i = \"@firebase/auth-compat\";\n\nconst name$h = \"@firebase/database\";\n\nconst name$g = \"@firebase/database-compat\";\n\nconst name$f = \"@firebase/functions\";\n\nconst name$e = \"@firebase/functions-compat\";\n\nconst name$d = \"@firebase/installations\";\n\nconst name$c = \"@firebase/installations-compat\";\n\nconst name$b = \"@firebase/messaging\";\n\nconst name$a = \"@firebase/messaging-compat\";\n\nconst name$9 = \"@firebase/performance\";\n\nconst name$8 = \"@firebase/performance-compat\";\n\nconst name$7 = \"@firebase/remote-config\";\n\nconst name$6 = \"@firebase/remote-config-compat\";\n\nconst name$5 = \"@firebase/storage\";\n\nconst name$4 = \"@firebase/storage-compat\";\n\nconst name$3 = \"@firebase/firestore\";\n\nconst name$2 = \"@firebase/vertexai-preview\";\n\nconst name$1 = \"@firebase/firestore-compat\";\n\nconst name = \"firebase\";\nconst version = \"10.12.0\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The default app name\r\n *\r\n * @internal\r\n */\r\nconst DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nconst PLATFORM_LOG_STRING = {\r\n    [name$p]: 'fire-core',\r\n    [name$o]: 'fire-core-compat',\r\n    [name$m]: 'fire-analytics',\r\n    [name$n]: 'fire-analytics-compat',\r\n    [name$k]: 'fire-app-check',\r\n    [name$l]: 'fire-app-check-compat',\r\n    [name$j]: 'fire-auth',\r\n    [name$i]: 'fire-auth-compat',\r\n    [name$h]: 'fire-rtdb',\r\n    [name$g]: 'fire-rtdb-compat',\r\n    [name$f]: 'fire-fn',\r\n    [name$e]: 'fire-fn-compat',\r\n    [name$d]: 'fire-iid',\r\n    [name$c]: 'fire-iid-compat',\r\n    [name$b]: 'fire-fcm',\r\n    [name$a]: 'fire-fcm-compat',\r\n    [name$9]: 'fire-perf',\r\n    [name$8]: 'fire-perf-compat',\r\n    [name$7]: 'fire-rc',\r\n    [name$6]: 'fire-rc-compat',\r\n    [name$5]: 'fire-gcs',\r\n    [name$4]: 'fire-gcs-compat',\r\n    [name$3]: 'fire-fst',\r\n    [name$1]: 'fire-fst-compat',\r\n    [name$2]: 'fire-vertex',\r\n    'fire-js': 'fire-js',\r\n    [name]: 'fire-js-all'\r\n};\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @internal\r\n */\r\nconst _apps = new Map();\r\n/**\r\n * @internal\r\n */\r\nconst _serverApps = new Map();\r\n/**\r\n * Registered components.\r\n *\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst _components = new Map();\r\n/**\r\n * @param component - the component being added to this app's container\r\n *\r\n * @internal\r\n */\r\nfunction _addComponent(app, component) {\r\n    try {\r\n        app.container.addComponent(component);\r\n    }\r\n    catch (e) {\r\n        logger.debug(`Component ${component.name} failed to register with FirebaseApp ${app.name}`, e);\r\n    }\r\n}\r\n/**\r\n *\r\n * @internal\r\n */\r\nfunction _addOrOverwriteComponent(app, component) {\r\n    app.container.addOrOverwriteComponent(component);\r\n}\r\n/**\r\n *\r\n * @param component - the component to register\r\n * @returns whether or not the component is registered successfully\r\n *\r\n * @internal\r\n */\r\nfunction _registerComponent(component) {\r\n    const componentName = component.name;\r\n    if (_components.has(componentName)) {\r\n        logger.debug(`There were multiple attempts to register component ${componentName}.`);\r\n        return false;\r\n    }\r\n    _components.set(componentName, component);\r\n    // add the component to existing app instances\r\n    for (const app of _apps.values()) {\r\n        _addComponent(app, component);\r\n    }\r\n    for (const serverApp of _serverApps.values()) {\r\n        _addComponent(serverApp, component);\r\n    }\r\n    return true;\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n *\r\n * @returns the provider for the service with the matching name\r\n *\r\n * @internal\r\n */\r\nfunction _getProvider(app, name) {\r\n    const heartbeatController = app.container\r\n        .getProvider('heartbeat')\r\n        .getImmediate({ optional: true });\r\n    if (heartbeatController) {\r\n        void heartbeatController.triggerHeartbeat();\r\n    }\r\n    return app.container.getProvider(name);\r\n}\r\n/**\r\n *\r\n * @param app - FirebaseApp instance\r\n * @param name - service name\r\n * @param instanceIdentifier - service instance identifier in case the service supports multiple instances\r\n *\r\n * @internal\r\n */\r\nfunction _removeServiceInstance(app, name, instanceIdentifier = DEFAULT_ENTRY_NAME) {\r\n    _getProvider(app, name).clearInstance(instanceIdentifier);\r\n}\r\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp or FirebaseOptions.\r\n *\r\n * @returns true if the provide object is of type FirebaseApp.\r\n *\r\n * @internal\r\n */\r\nfunction _isFirebaseApp(obj) {\r\n    return obj.options !== undefined;\r\n}\r\n/**\r\n *\r\n * @param obj - an object of type FirebaseApp.\r\n *\r\n * @returns true if the provided object is of type FirebaseServerAppImpl.\r\n *\r\n * @internal\r\n */\r\nfunction _isFirebaseServerApp(obj) {\r\n    return obj.settings !== undefined;\r\n}\r\n/**\r\n * Test only\r\n *\r\n * @internal\r\n */\r\nfunction _clearComponents() {\r\n    _components.clear();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call initializeApp() first',\r\n    [\"bad-app-name\" /* AppError.BAD_APP_NAME */]: \"Illegal App name: '{$appName}'\",\r\n    [\"duplicate-app\" /* AppError.DUPLICATE_APP */]: \"Firebase App named '{$appName}' already exists with different options or config\",\r\n    [\"app-deleted\" /* AppError.APP_DELETED */]: \"Firebase App named '{$appName}' already deleted\",\r\n    [\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */]: 'Firebase Server App has been deleted',\r\n    [\"no-options\" /* AppError.NO_OPTIONS */]: 'Need to provide options, when not being deployed to hosting via source.',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.',\r\n    [\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */]: 'First argument to `onLog` must be null or a function.',\r\n    [\"idb-open\" /* AppError.IDB_OPEN */]: 'Error thrown when opening IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-get\" /* AppError.IDB_GET */]: 'Error thrown when reading from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-set\" /* AppError.IDB_WRITE */]: 'Error thrown when writing to IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"idb-delete\" /* AppError.IDB_DELETE */]: 'Error thrown when deleting from IndexedDB. Original error: {$originalErrorMessage}.',\r\n    [\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */]: 'FirebaseServerApp deleteOnDeref field defined but the JS runtime does not support FinalizationRegistry.',\r\n    [\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */]: 'FirebaseServerApp is not for use in browser environments.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(options, config, container) {\r\n        this._isDeleted = false;\r\n        this._options = Object.assign({}, options);\r\n        this._config = Object.assign({}, config);\r\n        this._name = config.name;\r\n        this._automaticDataCollectionEnabled =\r\n            config.automaticDataCollectionEnabled;\r\n        this._container = container;\r\n        this.container.addComponent(new Component('app', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        this.checkDestroyed();\r\n        return this._automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this.checkDestroyed();\r\n        this._automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        this.checkDestroyed();\r\n        return this._name;\r\n    }\r\n    get options() {\r\n        this.checkDestroyed();\r\n        return this._options;\r\n    }\r\n    get config() {\r\n        this.checkDestroyed();\r\n        return this._config;\r\n    }\r\n    get container() {\r\n        return this._container;\r\n    }\r\n    get isDeleted() {\r\n        return this._isDeleted;\r\n    }\r\n    set isDeleted(val) {\r\n        this._isDeleted = val;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"app-deleted\" /* AppError.APP_DELETED */, { appName: this._name });\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2023 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass FirebaseServerAppImpl extends FirebaseAppImpl {\r\n    constructor(options, serverConfig, name, container) {\r\n        // Build configuration parameters for the FirebaseAppImpl base class.\r\n        const automaticDataCollectionEnabled = serverConfig.automaticDataCollectionEnabled !== undefined\r\n            ? serverConfig.automaticDataCollectionEnabled\r\n            : false;\r\n        // Create the FirebaseAppSettings object for the FirebaseAppImp constructor.\r\n        const config = {\r\n            name,\r\n            automaticDataCollectionEnabled\r\n        };\r\n        if (options.apiKey !== undefined) {\r\n            // Construct the parent FirebaseAppImp object.\r\n            super(options, config, container);\r\n        }\r\n        else {\r\n            const appImpl = options;\r\n            super(appImpl.options, config, container);\r\n        }\r\n        // Now construct the data for the FirebaseServerAppImpl.\r\n        this._serverConfig = Object.assign({ automaticDataCollectionEnabled }, serverConfig);\r\n        this._finalizationRegistry = new FinalizationRegistry(() => {\r\n            this.automaticCleanup();\r\n        });\r\n        this._refCount = 0;\r\n        this.incRefCount(this._serverConfig.releaseOnDeref);\r\n        // Do not retain a hard reference to the dref object, otherwise the FinalizationRegisry\r\n        // will never trigger.\r\n        this._serverConfig.releaseOnDeref = undefined;\r\n        serverConfig.releaseOnDeref = undefined;\r\n        registerVersion(name$p, version$1, 'serverapp');\r\n    }\r\n    toJSON() {\r\n        return undefined;\r\n    }\r\n    get refCount() {\r\n        return this._refCount;\r\n    }\r\n    // Increment the reference count of this server app. If an object is provided, register it\r\n    // with the finalization registry.\r\n    incRefCount(obj) {\r\n        if (this.isDeleted) {\r\n            return;\r\n        }\r\n        this._refCount++;\r\n        if (obj !== undefined) {\r\n            this._finalizationRegistry.register(obj, this);\r\n        }\r\n    }\r\n    // Decrement the reference count.\r\n    decRefCount() {\r\n        if (this.isDeleted) {\r\n            return 0;\r\n        }\r\n        return --this._refCount;\r\n    }\r\n    // Invoked by the FinalizationRegistry callback to note that this app should go through its\r\n    // reference counts and delete itself if no reference count remain. The coordinating logic that\r\n    // handles this is in deleteApp(...).\r\n    automaticCleanup() {\r\n        void deleteApp(this);\r\n    }\r\n    get settings() {\r\n        this.checkDestroyed();\r\n        return this._serverConfig;\r\n    }\r\n    /**\r\n     * This function will throw an Error if the App has already been deleted -\r\n     * use before performing API actions on the App.\r\n     */\r\n    checkDestroyed() {\r\n        if (this.isDeleted) {\r\n            throw ERROR_FACTORY.create(\"server-app-deleted\" /* AppError.SERVER_APP_DELETED */);\r\n        }\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The current SDK version.\r\n *\r\n * @public\r\n */\r\nconst SDK_VERSION = version;\r\nfunction initializeApp(_options, rawConfig = {}) {\r\n    let options = _options;\r\n    if (typeof rawConfig !== 'object') {\r\n        const name = rawConfig;\r\n        rawConfig = { name };\r\n    }\r\n    const config = Object.assign({ name: DEFAULT_ENTRY_NAME, automaticDataCollectionEnabled: false }, rawConfig);\r\n    const name = config.name;\r\n    if (typeof name !== 'string' || !name) {\r\n        throw ERROR_FACTORY.create(\"bad-app-name\" /* AppError.BAD_APP_NAME */, {\r\n            appName: String(name)\r\n        });\r\n    }\r\n    options || (options = getDefaultAppConfig());\r\n    if (!options) {\r\n        throw ERROR_FACTORY.create(\"no-options\" /* AppError.NO_OPTIONS */);\r\n    }\r\n    const existingApp = _apps.get(name);\r\n    if (existingApp) {\r\n        // return the existing app if options and config deep equal the ones in the existing app.\r\n        if (deepEqual(options, existingApp.options) &&\r\n            deepEqual(config, existingApp.config)) {\r\n            return existingApp;\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"duplicate-app\" /* AppError.DUPLICATE_APP */, { appName: name });\r\n        }\r\n    }\r\n    const container = new ComponentContainer(name);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseAppImpl(options, config, container);\r\n    _apps.set(name, newApp);\r\n    return newApp;\r\n}\r\nfunction initializeServerApp(_options, _serverAppConfig) {\r\n    if (isBrowser()) {\r\n        // FirebaseServerApp isn't designed to be run in browsers.\r\n        throw ERROR_FACTORY.create(\"invalid-server-app-environment\" /* AppError.INVALID_SERVER_APP_ENVIRONMENT */);\r\n    }\r\n    if (_serverAppConfig.automaticDataCollectionEnabled === undefined) {\r\n        _serverAppConfig.automaticDataCollectionEnabled = false;\r\n    }\r\n    let appOptions;\r\n    if (_isFirebaseApp(_options)) {\r\n        appOptions = _options.options;\r\n    }\r\n    else {\r\n        appOptions = _options;\r\n    }\r\n    // Build an app name based on a hash of the configuration options.\r\n    const nameObj = Object.assign(Object.assign({}, _serverAppConfig), appOptions);\r\n    // However, Do not mangle the name based on releaseOnDeref, since it will vary between the\r\n    // construction of FirebaseServerApp instances. For example, if the object is the request headers.\r\n    if (nameObj.releaseOnDeref !== undefined) {\r\n        delete nameObj.releaseOnDeref;\r\n    }\r\n    const hashCode = (s) => {\r\n        return [...s].reduce((hash, c) => (Math.imul(31, hash) + c.charCodeAt(0)) | 0, 0);\r\n    };\r\n    if (_serverAppConfig.releaseOnDeref !== undefined) {\r\n        if (typeof FinalizationRegistry === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"finalization-registry-not-supported\" /* AppError.FINALIZATION_REGISTRY_NOT_SUPPORTED */, {});\r\n        }\r\n    }\r\n    const nameString = '' + hashCode(JSON.stringify(nameObj));\r\n    const existingApp = _serverApps.get(nameString);\r\n    if (existingApp) {\r\n        existingApp.incRefCount(_serverAppConfig.releaseOnDeref);\r\n        return existingApp;\r\n    }\r\n    const container = new ComponentContainer(nameString);\r\n    for (const component of _components.values()) {\r\n        container.addComponent(component);\r\n    }\r\n    const newApp = new FirebaseServerAppImpl(appOptions, _serverAppConfig, nameString, container);\r\n    _serverApps.set(nameString, newApp);\r\n    return newApp;\r\n}\r\n/**\r\n * Retrieves a {@link @firebase/app#FirebaseApp} instance.\r\n *\r\n * When called with no arguments, the default app is returned. When an app name\r\n * is provided, the app corresponding to that name is returned.\r\n *\r\n * An exception is thrown if the app being retrieved has not yet been\r\n * initialized.\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return the default app\r\n * const app = getApp();\r\n * ```\r\n *\r\n * @example\r\n * ```javascript\r\n * // Return a named app\r\n * const otherApp = getApp(\"otherApp\");\r\n * ```\r\n *\r\n * @param name - Optional name of the app to return. If no name is\r\n *   provided, the default is `\"[DEFAULT]\"`.\r\n *\r\n * @returns The app corresponding to the provided app name.\r\n *   If no app name is provided, the default app is returned.\r\n *\r\n * @public\r\n */\r\nfunction getApp(name = DEFAULT_ENTRY_NAME) {\r\n    const app = _apps.get(name);\r\n    if (!app && name === DEFAULT_ENTRY_NAME && getDefaultAppConfig()) {\r\n        return initializeApp();\r\n    }\r\n    if (!app) {\r\n        throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n    }\r\n    return app;\r\n}\r\n/**\r\n * A (read-only) array of all initialized apps.\r\n * @public\r\n */\r\nfunction getApps() {\r\n    return Array.from(_apps.values());\r\n}\r\n/**\r\n * Renders this app unusable and frees the resources of all associated\r\n * services.\r\n *\r\n * @example\r\n * ```javascript\r\n * deleteApp(app)\r\n *   .then(function() {\r\n *     console.log(\"App deleted successfully\");\r\n *   })\r\n *   .catch(function(error) {\r\n *     console.log(\"Error deleting app:\", error);\r\n *   });\r\n * ```\r\n *\r\n * @public\r\n */\r\nasync function deleteApp(app) {\r\n    let cleanupProviders = false;\r\n    const name = app.name;\r\n    if (_apps.has(name)) {\r\n        cleanupProviders = true;\r\n        _apps.delete(name);\r\n    }\r\n    else if (_serverApps.has(name)) {\r\n        const firebaseServerApp = app;\r\n        if (firebaseServerApp.decRefCount() <= 0) {\r\n            _serverApps.delete(name);\r\n            cleanupProviders = true;\r\n        }\r\n    }\r\n    if (cleanupProviders) {\r\n        await Promise.all(app.container\r\n            .getProviders()\r\n            .map(provider => provider.delete()));\r\n        app.isDeleted = true;\r\n    }\r\n}\r\n/**\r\n * Registers a library's name and version for platform logging purposes.\r\n * @param library - Name of 1p or 3p library (e.g. firestore, angularfire)\r\n * @param version - Current version of that library.\r\n * @param variant - Bundle variant, e.g., node, rn, etc.\r\n *\r\n * @public\r\n */\r\nfunction registerVersion(libraryKeyOrName, version, variant) {\r\n    var _a;\r\n    // TODO: We can use this check to whitelist strings when/if we set up\r\n    // a good whitelist system.\r\n    let library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;\r\n    if (variant) {\r\n        library += `-${variant}`;\r\n    }\r\n    const libraryMismatch = library.match(/\\s|\\//);\r\n    const versionMismatch = version.match(/\\s|\\//);\r\n    if (libraryMismatch || versionMismatch) {\r\n        const warning = [\r\n            `Unable to register library \"${library}\" with version \"${version}\":`\r\n        ];\r\n        if (libraryMismatch) {\r\n            warning.push(`library name \"${library}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        if (libraryMismatch && versionMismatch) {\r\n            warning.push('and');\r\n        }\r\n        if (versionMismatch) {\r\n            warning.push(`version name \"${version}\" contains illegal characters (whitespace or \"/\")`);\r\n        }\r\n        logger.warn(warning.join(' '));\r\n        return;\r\n    }\r\n    _registerComponent(new Component(`${library}-version`, () => ({ library, version }), \"VERSION\" /* ComponentType.VERSION */));\r\n}\r\n/**\r\n * Sets log handler for all Firebase SDKs.\r\n * @param logCallback - An optional custom log handler that executes user code whenever\r\n * the Firebase SDK makes a logging call.\r\n *\r\n * @public\r\n */\r\nfunction onLog(logCallback, options) {\r\n    if (logCallback !== null && typeof logCallback !== 'function') {\r\n        throw ERROR_FACTORY.create(\"invalid-log-argument\" /* AppError.INVALID_LOG_ARGUMENT */);\r\n    }\r\n    setUserLogHandler(logCallback, options);\r\n}\r\n/**\r\n * Sets log level for all Firebase SDKs.\r\n *\r\n * All of the log types above the current log level are captured (i.e. if\r\n * you set the log level to `info`, errors are logged, but `debug` and\r\n * `verbose` logs are not).\r\n *\r\n * @public\r\n */\r\nfunction setLogLevel(logLevel) {\r\n    setLogLevel$1(logLevel);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst DB_NAME = 'firebase-heartbeat-database';\r\nconst DB_VERSION = 1;\r\nconst STORE_NAME = 'firebase-heartbeat-store';\r\nlet dbPromise = null;\r\nfunction getDbPromise() {\r\n    if (!dbPromise) {\r\n        dbPromise = openDB(DB_NAME, DB_VERSION, {\r\n            upgrade: (db, oldVersion) => {\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (oldVersion) {\r\n                    case 0:\r\n                        try {\r\n                            db.createObjectStore(STORE_NAME);\r\n                        }\r\n                        catch (e) {\r\n                            // Safari/iOS browsers throw occasional exceptions on\r\n                            // db.createObjectStore() that may be a bug. Avoid blocking\r\n                            // the rest of the app functionality.\r\n                            console.warn(e);\r\n                        }\r\n                }\r\n            }\r\n        }).catch(e => {\r\n            throw ERROR_FACTORY.create(\"idb-open\" /* AppError.IDB_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            });\r\n        });\r\n    }\r\n    return dbPromise;\r\n}\r\nasync function readHeartbeatsFromIndexedDB(app) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME);\r\n        const result = await tx.objectStore(STORE_NAME).get(computeKey(app));\r\n        // We already have the value but tx.done can throw,\r\n        // so we need to await it here to catch errors\r\n        await tx.done;\r\n        return result;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-get\" /* AppError.IDB_GET */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nasync function writeHeartbeatsToIndexedDB(app, heartbeatObject) {\r\n    try {\r\n        const db = await getDbPromise();\r\n        const tx = db.transaction(STORE_NAME, 'readwrite');\r\n        const objectStore = tx.objectStore(STORE_NAME);\r\n        await objectStore.put(heartbeatObject, computeKey(app));\r\n        await tx.done;\r\n    }\r\n    catch (e) {\r\n        if (e instanceof FirebaseError) {\r\n            logger.warn(e.message);\r\n        }\r\n        else {\r\n            const idbGetError = ERROR_FACTORY.create(\"idb-set\" /* AppError.IDB_WRITE */, {\r\n                originalErrorMessage: e === null || e === void 0 ? void 0 : e.message\r\n            });\r\n            logger.warn(idbGetError.message);\r\n        }\r\n    }\r\n}\r\nfunction computeKey(app) {\r\n    return `${app.name}!${app.options.appId}`;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst MAX_HEADER_BYTES = 1024;\r\n// 30 days\r\nconst STORED_HEARTBEAT_RETENTION_MAX_MILLIS = 30 * 24 * 60 * 60 * 1000;\r\nclass HeartbeatServiceImpl {\r\n    constructor(container) {\r\n        this.container = container;\r\n        /**\r\n         * In-memory cache for heartbeats, used by getHeartbeatsHeader() to generate\r\n         * the header string.\r\n         * Stores one record per date. This will be consolidated into the standard\r\n         * format of one record per user agent string before being sent as a header.\r\n         * Populated from indexedDB when the controller is instantiated and should\r\n         * be kept in sync with indexedDB.\r\n         * Leave public for easier testing.\r\n         */\r\n        this._heartbeatsCache = null;\r\n        const app = this.container.getProvider('app').getImmediate();\r\n        this._storage = new HeartbeatStorageImpl(app);\r\n        this._heartbeatsCachePromise = this._storage.read().then(result => {\r\n            this._heartbeatsCache = result;\r\n            return result;\r\n        });\r\n    }\r\n    /**\r\n     * Called to report a heartbeat. The function will generate\r\n     * a HeartbeatsByUserAgent object, update heartbeatsCache, and persist it\r\n     * to IndexedDB.\r\n     * Note that we only store one heartbeat per day. So if a heartbeat for today is\r\n     * already logged, subsequent calls to this function in the same day will be ignored.\r\n     */\r\n    async triggerHeartbeat() {\r\n        var _a, _b;\r\n        const platformLogger = this.container\r\n            .getProvider('platform-logger')\r\n            .getImmediate();\r\n        // This is the \"Firebase user agent\" string from the platform logger\r\n        // service, not the browser user agent.\r\n        const agent = platformLogger.getPlatformInfoString();\r\n        const date = getUTCDateString();\r\n        if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null) {\r\n            this._heartbeatsCache = await this._heartbeatsCachePromise;\r\n            // If we failed to construct a heartbeats cache, then return immediately.\r\n            if (((_b = this._heartbeatsCache) === null || _b === void 0 ? void 0 : _b.heartbeats) == null) {\r\n                return;\r\n            }\r\n        }\r\n        // Do not store a heartbeat if one is already stored for this day\r\n        // or if a header has already been sent today.\r\n        if (this._heartbeatsCache.lastSentHeartbeatDate === date ||\r\n            this._heartbeatsCache.heartbeats.some(singleDateHeartbeat => singleDateHeartbeat.date === date)) {\r\n            return;\r\n        }\r\n        else {\r\n            // There is no entry for this date. Create one.\r\n            this._heartbeatsCache.heartbeats.push({ date, agent });\r\n        }\r\n        // Remove entries older than 30 days.\r\n        this._heartbeatsCache.heartbeats = this._heartbeatsCache.heartbeats.filter(singleDateHeartbeat => {\r\n            const hbTimestamp = new Date(singleDateHeartbeat.date).valueOf();\r\n            const now = Date.now();\r\n            return now - hbTimestamp <= STORED_HEARTBEAT_RETENTION_MAX_MILLIS;\r\n        });\r\n        return this._storage.overwrite(this._heartbeatsCache);\r\n    }\r\n    /**\r\n     * Returns a base64 encoded string which can be attached to the heartbeat-specific header directly.\r\n     * It also clears all heartbeats from memory as well as in IndexedDB.\r\n     *\r\n     * NOTE: Consuming product SDKs should not send the header if this method\r\n     * returns an empty string.\r\n     */\r\n    async getHeartbeatsHeader() {\r\n        var _a;\r\n        if (this._heartbeatsCache === null) {\r\n            await this._heartbeatsCachePromise;\r\n        }\r\n        // If it's still null or the array is empty, there is no data to send.\r\n        if (((_a = this._heartbeatsCache) === null || _a === void 0 ? void 0 : _a.heartbeats) == null ||\r\n            this._heartbeatsCache.heartbeats.length === 0) {\r\n            return '';\r\n        }\r\n        const date = getUTCDateString();\r\n        // Extract as many heartbeats from the cache as will fit under the size limit.\r\n        const { heartbeatsToSend, unsentEntries } = extractHeartbeatsForHeader(this._heartbeatsCache.heartbeats);\r\n        const headerString = base64urlEncodeWithoutPadding(JSON.stringify({ version: 2, heartbeats: heartbeatsToSend }));\r\n        // Store last sent date to prevent another being logged/sent for the same day.\r\n        this._heartbeatsCache.lastSentHeartbeatDate = date;\r\n        if (unsentEntries.length > 0) {\r\n            // Store any unsent entries if they exist.\r\n            this._heartbeatsCache.heartbeats = unsentEntries;\r\n            // This seems more likely than emptying the array (below) to lead to some odd state\r\n            // since the cache isn't empty and this will be called again on the next request,\r\n            // and is probably safest if we await it.\r\n            await this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        else {\r\n            this._heartbeatsCache.heartbeats = [];\r\n            // Do not wait for this, to reduce latency.\r\n            void this._storage.overwrite(this._heartbeatsCache);\r\n        }\r\n        return headerString;\r\n    }\r\n}\r\nfunction getUTCDateString() {\r\n    const today = new Date();\r\n    // Returns date format 'YYYY-MM-DD'\r\n    return today.toISOString().substring(0, 10);\r\n}\r\nfunction extractHeartbeatsForHeader(heartbeatsCache, maxSize = MAX_HEADER_BYTES) {\r\n    // Heartbeats grouped by user agent in the standard format to be sent in\r\n    // the header.\r\n    const heartbeatsToSend = [];\r\n    // Single date format heartbeats that are not sent.\r\n    let unsentEntries = heartbeatsCache.slice();\r\n    for (const singleDateHeartbeat of heartbeatsCache) {\r\n        // Look for an existing entry with the same user agent.\r\n        const heartbeatEntry = heartbeatsToSend.find(hb => hb.agent === singleDateHeartbeat.agent);\r\n        if (!heartbeatEntry) {\r\n            // If no entry for this user agent exists, create one.\r\n            heartbeatsToSend.push({\r\n                agent: singleDateHeartbeat.agent,\r\n                dates: [singleDateHeartbeat.date]\r\n            });\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                // If the header would exceed max size, remove the added heartbeat\r\n                // entry and stop adding to the header.\r\n                heartbeatsToSend.pop();\r\n                break;\r\n            }\r\n        }\r\n        else {\r\n            heartbeatEntry.dates.push(singleDateHeartbeat.date);\r\n            // If the header would exceed max size, remove the added date\r\n            // and stop adding to the header.\r\n            if (countBytes(heartbeatsToSend) > maxSize) {\r\n                heartbeatEntry.dates.pop();\r\n                break;\r\n            }\r\n        }\r\n        // Pop unsent entry from queue. (Skipped if adding the entry exceeded\r\n        // quota and the loop breaks early.)\r\n        unsentEntries = unsentEntries.slice(1);\r\n    }\r\n    return {\r\n        heartbeatsToSend,\r\n        unsentEntries\r\n    };\r\n}\r\nclass HeartbeatStorageImpl {\r\n    constructor(app) {\r\n        this.app = app;\r\n        this._canUseIndexedDBPromise = this.runIndexedDBEnvironmentCheck();\r\n    }\r\n    async runIndexedDBEnvironmentCheck() {\r\n        if (!isIndexedDBAvailable()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return validateIndexedDBOpenable()\r\n                .then(() => true)\r\n                .catch(() => false);\r\n        }\r\n    }\r\n    /**\r\n     * Read all heartbeats.\r\n     */\r\n    async read() {\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return { heartbeats: [] };\r\n        }\r\n        else {\r\n            const idbHeartbeatObject = await readHeartbeatsFromIndexedDB(this.app);\r\n            if (idbHeartbeatObject === null || idbHeartbeatObject === void 0 ? void 0 : idbHeartbeatObject.heartbeats) {\r\n                return idbHeartbeatObject;\r\n            }\r\n            else {\r\n                return { heartbeats: [] };\r\n            }\r\n        }\r\n    }\r\n    // overwrite the storage with the provided heartbeats\r\n    async overwrite(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: heartbeatsObject.heartbeats\r\n            });\r\n        }\r\n    }\r\n    // add heartbeats\r\n    async add(heartbeatsObject) {\r\n        var _a;\r\n        const canUseIndexedDB = await this._canUseIndexedDBPromise;\r\n        if (!canUseIndexedDB) {\r\n            return;\r\n        }\r\n        else {\r\n            const existingHeartbeatsObject = await this.read();\r\n            return writeHeartbeatsToIndexedDB(this.app, {\r\n                lastSentHeartbeatDate: (_a = heartbeatsObject.lastSentHeartbeatDate) !== null && _a !== void 0 ? _a : existingHeartbeatsObject.lastSentHeartbeatDate,\r\n                heartbeats: [\r\n                    ...existingHeartbeatsObject.heartbeats,\r\n                    ...heartbeatsObject.heartbeats\r\n                ]\r\n            });\r\n        }\r\n    }\r\n}\r\n/**\r\n * Calculate bytes of a HeartbeatsByUserAgent array after being wrapped\r\n * in a platform logging header JSON object, stringified, and converted\r\n * to base 64.\r\n */\r\nfunction countBytes(heartbeatsCache) {\r\n    // base64 has a restricted set of characters, all of which should be 1 byte.\r\n    return base64urlEncodeWithoutPadding(\r\n    // heartbeatsCache wrapper properties\r\n    JSON.stringify({ version: 2, heartbeats: heartbeatsCache })).length;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    _registerComponent(new Component('platform-logger', container => new PlatformLoggerServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    _registerComponent(new Component('heartbeat', container => new HeartbeatServiceImpl(container), \"PRIVATE\" /* ComponentType.PRIVATE */));\r\n    // Register `app` package.\r\n    registerVersion(name$p, version$1, variant);\r\n    // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\r\n    registerVersion(name$p, version$1, 'esm2017');\r\n    // Register platform SDK identifier (no version).\r\n    registerVersion('fire-js', '');\r\n}\n\n/**\r\n * Firebase App\r\n *\r\n * @remarks This package coordinates the communication between the different Firebase components\r\n * @packageDocumentation\r\n */\r\nregisterCoreComponents('');\n\nexport { SDK_VERSION, DEFAULT_ENTRY_NAME as _DEFAULT_ENTRY_NAME, _addComponent, _addOrOverwriteComponent, _apps, _clearComponents, _components, _getProvider, _isFirebaseApp, _isFirebaseServerApp, _registerComponent, _removeServiceInstance, _serverApps, deleteApp, getApp, getApps, initializeApp, initializeServerApp, onLog, registerVersion, setLogLevel };\n//# sourceMappingURL=index.esm2017.js.map\n"]}